[DEFAULT]

debug = False

# Name of the gdb executable, usualy is "gdb-mic" for Xeon Phi
gdbExecName = gdb

# How many interrupt signals to send sequentially
seqSignals = 5
# How many random threads will attempt to send interrupt signals
numThreadsFI = 3

# Max time to send signal. It should be the app exec time in seconds
maxWaitTime = 10

# Commands to set the session inside GDB environment
gdbInitStrings = file /mnt/d/Workspace/SALBP-1-Simulated-Annealing/Simulated-Annealing-Duplication/salbp1-sa;set args -c 54 -s 1530488776 -v < /mnt/d/Workspace/SALBP-1-Simulated-Annealing/WEE-MAG.IN2

goldFile = /mnt/d/Workspace/SALBP-1-Simulated-Annealing/Simulated-Annealing-Duplication/outputs.txt
outputFile = /mnt/d/Workspace/SALBP-1-Simulated-Annealing/carol-fi/outputs.txt

# Shell command to send SIGINT to the application being tested
signalCmd = killall -2 salbp1-sa

# Kill commands to exit all applications (GDB and the application tested)
# Need to ensure safe termination before another fault injection test
killStrs = killall -9 gdb;killall -9 salbp1-sa

[salbp1-sa-duplicated-random]
# Start and end time to try randomly inject a fault
initSignal = 0
endSignal = 3
# Which fault model to use, 0 -> single; 1 -> double; 2 -> random; 3 -> zeros; 4 -> least significant bits (LSB)
faultModel = 2
